// <copyright file="CustomerRequest.cs" company="APIMatic">
// Copyright (c) APIMatic. All rights reserved.
// </copyright>
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using APIMatic.Core.Utilities.Converters;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using PaypalServerSDK.Standard;
using PaypalServerSDK.Standard.Utilities;

namespace PaypalServerSDK.Standard.Models
{
    /// <summary>
    /// CustomerRequest.
    /// </summary>
    public class CustomerRequest
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomerRequest"/> class.
        /// </summary>
        public CustomerRequest()
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CustomerRequest"/> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="merchantCustomerId">merchant_customer_id.</param>
        public CustomerRequest(
            string id = null,
            string merchantCustomerId = null)
        {
            this.Id = id;
            this.MerchantCustomerId = merchantCustomerId;
        }

        /// <summary>
        /// The unique ID for a customer generated by PayPal.
        /// </summary>
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }

        /// <summary>
        /// Merchants and partners may already have a data-store where their customer information is persisted. Use merchant_customer_id to associate the PayPal-generated customer.id to your representation of a customer.
        /// </summary>
        [JsonProperty("merchant_customer_id", NullValueHandling = NullValueHandling.Ignore)]
        public string MerchantCustomerId { get; set; }

        /// <inheritdoc/>
        public override string ToString()
        {
            var toStringOutput = new List<string>();

            this.ToString(toStringOutput);

            return $"CustomerRequest : ({string.Join(", ", toStringOutput)})";
        }

        /// <inheritdoc/>
        public override bool Equals(object obj)
        {
            if (obj == null)
            {
                return false;
            }

            if (obj == this)
            {
                return true;
            }
            return obj is CustomerRequest other &&                ((this.Id == null && other.Id == null) || (this.Id?.Equals(other.Id) == true)) &&
                ((this.MerchantCustomerId == null && other.MerchantCustomerId == null) || (this.MerchantCustomerId?.Equals(other.MerchantCustomerId) == true));
        }
        
        /// <summary>
        /// ToString overload.
        /// </summary>
        /// <param name="toStringOutput">List of strings.</param>
        protected void ToString(List<string> toStringOutput)
        {
            toStringOutput.Add($"this.Id = {(this.Id == null ? "null" : this.Id)}");
            toStringOutput.Add($"this.MerchantCustomerId = {(this.MerchantCustomerId == null ? "null" : this.MerchantCustomerId)}");
        }
    }
}